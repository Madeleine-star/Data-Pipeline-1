<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<!--key/keyref in the database for the recipe and categorie-->
	<xs:element name='Root'>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='recipes'>
					<xs:complexType>
						<xs:sequence>
							<xs:element name='recipe' type='recipeType' minOccurs='0' maxOccurs='unbounded'/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='ingredients'>
					<xs:complexType>
						<xs:sequence>
							<xs:element name='ingredient' type='ingredientType' minOccurs='0' maxOccurs='unbounded'/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='menus'>
					<xs:complexType>
						<xs:sequence>
							<xs:element name='menu' type='menuType' minOccurs='0' maxOccurs='unbounded'/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='Categorie'>
					<xs:simpleType>
						<xs:restriction base='xs:string'>
							<xs:enumeration value='Traditional'/>
							<xs:enumeration value='Express'/>
							<xs:enumeration value='World flavors'/>
							<xs:enumeration value='Light'/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
		<!--a key/keyref relation between the categori and the recipe categorie-->
		<xs:key name='Categorykey'>
			<xs:selector xpath="Categorie"/>
			<xs:field xpath="Categorie"/>
		</xs:key>
		<xs:keyref name='RecRef' refer='Categorykey'>
			<xs:selector xpath='recipes/recipe'/>
			<xs:field xpath='RefCategorie'/>
		</xs:keyref>
	</xs:element>
	<xs:element name='Categorie'>
		<xs:simpleType>
			<xs:restriction base='xs:string'>
				<xs:enumeration value='Traditional'/>
				<xs:enumeration value='Express'/>
				<xs:enumeration value='World flavors'/>
				<xs:enumeration value='Light'/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!---->
	<!--definition of the subtypes recipe-->
	<xs:complexType name='recipeType'>
		<xs:sequence>
			<xs:element name='name' type='RecNameType'/>
			<xs:element name='ingredient_rec' minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name='ingredient_name' type='xs:string'/>
						<xs:element name='ingredient_quantity'>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:nonNegativeInteger">
										<xs:attribute name='unit' type="xs:string"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name='IngRef' type='xs:string'/>
				</xs:complexType>
				<!--the attribute here need to follow the pattern define for IngredientKey
						meaning the 3 first letters of the ingredient name in uppercase-->
			</xs:element>
			<!--the RefCategorie must follow the categorie type list because of the key/keyref-->
			<xs:element name='RefCategorie' type='xs:string'/>
			<xs:element name='Budget' type='price'/>
			<xs:element name='cooking_time'>
				<xs:complexType>
					<xs:sequence>
						<xs:element name='CookTime' type='TimeType'/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name='preparation_time' type='TimeType'/>
			<!--the same pattern than for cooking_time will be use here-->
			<xs:element name='level'>
				<!--think to another name-->
				<xs:simpleType>
					<xs:restriction base='xs:string'>
						<xs:enumeration value="easy"/>
						<xs:enumeration value="middle"/>
						<xs:enumeration value="expert"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name='number_serving'>
				<xs:simpleType>
					<xs:restriction base='xs:integer'>
						<xs:minInclusive value="2"/>
						<xs:maxInclusive value="4"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<!--allow to preserve all white space in the step element
			to write all the step in one element with several paragraphe-->
			<xs:element name='step'>
				<xs:simpleType>
					<xs:restriction base='xs:string'>
						<xs:whiteSpace value='preserve'/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name='rating' type='RatingTypes'/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name='TimeType'>
		<xs:union memberTypes='CookTypeTime'>
			<xs:simpleType>
				<xs:restriction base='xs:positiveInteger'>
					<xs:pattern value='[0-60]'/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name='CookTypeTime'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value='sec'/>
			<xs:enumeration value='min'/>
			<xs:enumeration value='h'/>
		</xs:restriction>
	</xs:simpleType>
	<!--display the time like this 10 min, 1h, 30sec-->
	<xs:simpleType name='RatingTypes'>
		<xs:union memberTypes='RatingType'>
			<xs:simpleType>
				<xs:restriction base='xs:integer'>
					<xs:pattern value='[1-5]'/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name='RatingType'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value='start'/>
			<xs:enumeration value='starts'/>
		</xs:restriction>
	</xs:simpleType>
	<!--the rating element should like this 1 start or 4 starts-->
	<!---->
	<!--To add the currency for the budget price of the recipe
	the element should look like this 
	<Budget price = 'dollars'> 20 </Budget>-->
	<xs:complexType name='price'>
		<xs:simpleContent>
			<xs:extension base='xs:decimal'>
				<xs:attribute name='devise' type='xs:string'/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!---->
	<!--Definition of the recipe name which is a list of string separate 
	by white space with minimum 2 words and maximum 11
	for exemple:
	<name>Broccoli tabbouleh with grilled vegetables</name>
	-->
	<xs:simpleType name='RecNameType'>
		<xs:list itemType='xs:string'/>
	</xs:simpleType>
	<!---->
	<!--definition of the subtype ingredient-->
	<xs:complexType name='ingredientType'>
		<xs:sequence>
			<xs:element name='name' type='xs:string'/>
			<!--definition of the season list where the ingredient grow
			the type is restricted the list of 4 seasons-->
			<xs:element name='season'>
				<xs:simpleType>
					<xs:restriction base='xs:string'>
						<xs:enumeration value="Winter"/>
						<xs:enumeration value="Spring"/>
						<xs:enumeration value="Summer"/>
						<xs:enumeration value="Autumn"/>
						<xs:enumeration value="All"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<!--follow the type price define above-->
			<xs:element name='Budget' type='price'/>
		</xs:sequence>
		<xs:attribute name='IngredientID' type='ingID'/>
	</xs:complexType>
	<xs:simpleType name='ingID'>
		<xs:restriction base='xs:string'>
			<xs:pattern value='[A-Z] [A-Z] [A-Z]'/>
			<!--the id pattern here take the first 3 letters of the ingredient name in uppercase like:
				tomato = TOM and carrot = CAR-->
		</xs:restriction>
	</xs:simpleType>
	<!---->
	<!--definition of the menu type-->
	<xs:complexType name='menuType'>
		<xs:sequence>
			<xs:element name='MenuCategorie' type='xs:string'/>
			<!--the number of recipes in the menu should be between 2 to 4-->
			<xs:element name='number_recipe'>
				<xs:simpleType>
					<xs:restriction base='xs:integer'>
						<xs:pattern value='[2-4]'/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<!--list of recipe in the menu with the number of element 
			in the list-->
			<xs:element name='recipelist' type='stringlist'/>
			<xs:element name='rating' type='RatingTypes'/>
			<!--the rating follow the pattern define above-->
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name='stringlist'>
		<xs:list itemType='xs:string'/>
	</xs:simpleType>
	<xs:simpleType name='stringlistlim'>
		<xs:restriction base='stringlist'>
			<xs:minLength value='0'/>
			<xs:maxLength value='20'/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name='delivery_method'>
		<xs:sequence>
			<xs:element name='delivery_frequency'>
				<xs:simpleType>
					<xs:restriction base='xs:string'>
						<xs:enumeration value='once week'/>
						<xs:enumeration value='twice week'/>
						<xs:enumeration value='daily'/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name='CustomerName' type='xs:string'/>
			<xs:element name='CustomerAddress' type='address'/>
			<xs:element name='Phone_number' type='Phone'/>
			<xs:element name='Cust_email' type='xs:string'/>
			<!--finish to define a pattern for the email address-->
		</xs:sequence>
	</xs:complexType>
			<xs:simpleType name='address'>
			<xs:restriction base='xs:string'>
				<xs:whiteSpace value='preserve'/>
			</xs:restriction>
		</xs:simpleType>
		<xs:simpleType name='Phone'>
		<xs:restriction base='xs:positiveInteger'>
		<xs:pattern value='\d{2}\d{2}\d{2}\d{2}\d{2}'/>
		</xs:restriction>
		</xs:simpleType>
		<!--<xs:simpleType name='email'>
		<xs:restriction base='xs:string'>
		<xs:pattern value='[^@]+@[^\.]+\..+'/>
		the email address will look like this name@food.org
		the [^@] mean any character except @
		the +@ allow to add a @ between the 2 string element
		the [^\.] mean any character before the .
		the \.. mean any charters 
		</xs:restriction>
		</xs:simpleType>-->
</xs:schema>